generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URL")
}

// Users for AUTH
enum UserRole {
    user
    admin
}

model User {
    id               String    @id @default(auto()) @map("_id") @db.ObjectId
    name             String?
    tel              String?   @unique
    email            String?   @unique
    password         String?
    role             UserRole  @default(user)
    avatar           String?
    resetToken       String?
    resetTokenExpiry DateTime?

    assets Asset[] @relation("admin")

    interestIds String[] @db.ObjectId
    interests   Asset[]  @relation("interests", fields: [interestIds], references: [id])

    @@map("users")
}

// Assets

enum Status {
    live
    dormant
    closed
}

enum AssetType {
    music
}

model Asset {
    id          String    @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    description String
    type        AssetType @default(music)
    status      Status    @default(dormant)

    adminId       String? @db.ObjectId
    administrator User?   @relation("admin", fields: [adminId], references: [id])

    interestedIds   String[] @db.ObjectId
    interestedUsers User[]   @relation("interests", fields: [interestedIds], references: [id])

    fingerprint AudioFingerprint?
    watermark   Watermark?

    @@map("assets")
}

// Fingerprint

model AudioFingerprint {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    assetId     String @unique @db.ObjectId
    fingerprint Json // Store fingerprint as JSON

    asset Asset @relation(fields: [assetId], references: [id])

    @@map("signatures")
}

model Watermark {
    id        String @id @default(auto()) @map("_id") @db.ObjectId
    assetId   String @unique @db.ObjectId
    watermark String // Store the watermark text

    asset Asset @relation(fields: [assetId], references: [id])

    @@map("watermarks")
}
